{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\user_pages\\\\pages\\\\eg.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { loadFirebase } from '../lib.db.js';\nexport default class Index extends React.Component {\n  static async getInitialProps() {\n    let firebase = await loadFirebase();\n    let result = await new Promise((resolve, reject) => {\n      firebase.firestore().collection('test').limit(10).get().then(snapshot => {\n        let data = [];\n        snapshot.forEach(doc => {\n          data.push(Object.assign({\n            id: doc.id\n          }, doc.data()));\n          resolve(data);\n        });\n      }).catch(error => {\n        reject([]);\n      });\n    });\n    return {\n      test: result\n    };\n  }\n\n  render() {\n    const test = this.props.test;\n    {\n      test && test.lenght > 0 ? __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, test.map(test => __jsx(\"li\", {\n        key: \"{test.id}\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 30\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 50\n        }\n      }, test.JobContract)))) : __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, \"no nothing found!\");\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/user_pages/pages/eg.js"],"names":["loadFirebase","Index","React","Component","getInitialProps","firebase","result","Promise","resolve","reject","firestore","collection","limit","get","then","snapshot","data","forEach","doc","push","Object","assign","id","catch","error","test","render","props","lenght","map","JobContract"],"mappings":";;;AAAA,SAAQA,YAAR,QAA2B,cAA3B;AACA,eAAe,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAmC;AAChD,eAAaC,eAAb,GAA8B;AAC5B,QAAIC,QAAQ,GAAC,MAAML,YAAY,EAA/B;AACF,QAAIM,MAAM,GAAC,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AAC3CJ,MAAAA,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,MAAhC,EACCC,KADD,CACO,EADP,EAECC,GAFD,GAGCC,IAHD,CAGMC,QAAQ,IAAE;AACd,YAAIC,IAAI,GAAC,EAAT;AACAD,QAAAA,QAAQ,CAACE,OAAT,CAAkBC,GAAD,IAAO;AACtBF,UAAAA,IAAI,CAACG,IAAL,CAAUC,MAAM,CAACC,MAAP,CAAc;AACtBC,YAAAA,EAAE,EAACJ,GAAG,CAACI;AADe,WAAd,EAERJ,GAAG,CAACF,IAAJ,EAFQ,CAAV;AAIAR,UAAAA,OAAO,CAACQ,IAAD,CAAP;AACD,SAND;AAOD,OAZD,EAaIO,KAbJ,CAaUC,KAAK,IAAE;AACbf,QAAAA,MAAM,CAAC,EAAD,CAAN;AACD,OAfH;AAgBD,KAjBc,CAAjB;AAkBC,WAAO;AAACgB,MAAAA,IAAI,EAACnB;AAAN,KAAP;AAEA;;AACCoB,EAAAA,MAAM,GAAE;AACJ,UAAMD,IAAI,GAAC,KAAKE,KAAL,CAAWF,IAAtB;AACA;AAAEA,MAAAA,IAAI,IAAIA,IAAI,CAACG,MAAL,GAAY,CAArB,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,IAAI,CAACI,GAAL,CAASJ,IAAI,IAAG;AAAI,QAAA,GAAG,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACK,WAAV,CAApB,CAAhB,CADL,CADC,GAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHL;AAMA;AACJ;;AAjC6C","sourcesContent":["import {loadFirebase} from '../lib.db.js'\r\nexport default class Index extends React.Component{\r\n  static async getInitialProps(){\r\n    let firebase=await loadFirebase()\r\n  let result=await new Promise((resolve,reject)=>{\r\n      firebase.firestore().collection('test')\r\n      .limit(10)\r\n      .get()\r\n      .then(snapshot=>{\r\n        let data=[]\r\n        snapshot.forEach((doc)=>{\r\n          data.push(Object.assign({\r\n            id:doc.id\r\n          },doc.data())\r\n          )\r\n          resolve(data)\r\n        })\r\n      }\r\n        ).catch(error=>{\r\n          reject([])\r\n        })\r\n    })\r\n   return {test:result}\r\n  \r\n  }\r\n    render(){\r\n        const test=this.props.test\r\n        {(test && test.lenght>0) ? \r\n        <ul>\r\n            {test.map(test=> <li key=\"{test.id}\"><h3>{test.JobContract}</h3></li>)}\r\n        </ul>:<p>\r\n            no nothing found!\r\n        </p>\r\n        }\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}