{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nexport function loadFirebase() {\n  try {\n    const Config = {\n      apiKey: process.env.FIREBASE_API_KEY,\n      authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n      databaseURL: process.env.FIREBASE_DATABASE_URL,\n      projectId: process.env.FIREBASE_PROJECT_ID,\n      storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n      messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID\n    };\n    firebase.initializeApp(Config);\n    firebase.firestore().settings({\n      timestampsInSnapshots: true\n    });\n  } catch (error) {\n    if (!/already exist/.test(error.message)) {\n      console.log(`Firebase did not initialize correctly:${error.message}`);\n    }\n  }\n\n  return firebase;\n}\nexport const JOB_COLLECTION = loadFirebase().firestore().collection('job');\nexport const AREA_COLLECTION = loadFirebase().firestore().collection('area');\nexport const CITY_COLLECTION = loadFirebase().firestore().collection('city');\nexport const EMPLOYER_COLLECTION = loadFirebase().firestore().collection('employer');\nexport const getCollectionRecords = async collection => {\n  const querySnapshot = await collection.get();\n  let data = [];\n  querySnapshot.forEach(doc => {\n    data.push(Object.assign({\n      data: doc.data(),\n      id: doc.id\n    }));\n  });\n  return data;\n};","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/user_pages/lib/db.js"],"names":["firebase","loadFirebase","Config","apiKey","process","env","FIREBASE_API_KEY","authDomain","FIREBASE_AUTH_DOMAIN","databaseURL","FIREBASE_DATABASE_URL","projectId","FIREBASE_PROJECT_ID","storageBucket","FIREBASE_STORAGE_BUCKET","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","initializeApp","firestore","settings","timestampsInSnapshots","error","test","message","console","log","JOB_COLLECTION","collection","AREA_COLLECTION","CITY_COLLECTION","EMPLOYER_COLLECTION","getCollectionRecords","querySnapshot","get","data","forEach","doc","push","Object","assign","id"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,SAASC,YAAT,GAAuB;AAC1B,MAAG;AACL,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADP;AAEbC,MAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFX;AAGbC,MAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,qBAHZ;AAIbC,MAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,mBAJV;AAKbC,MAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,uBALd;AAMbC,MAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANlB,KAAf;AAUAhB,IAAAA,QAAQ,CAACiB,aAAT,CAAuBf,MAAvB;AACAF,IAAAA,QAAQ,CAACkB,SAAT,GAAqBC,QAArB,CAA8B;AAACC,MAAAA,qBAAqB,EAAC;AAAvB,KAA9B;AAGD,GAfG,CAeH,OAAOC,KAAP,EAAa;AACV,QAAG,CAAC,gBAAgBC,IAAhB,CAAqBD,KAAK,CAACE,OAA3B,CAAJ,EAAwC;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAa,yCAAwCJ,KAAK,CAACE,OAAQ,EAAnE;AACH;AACJ;;AACD,SAAOvB,QAAP;AACC;AACD,OAAO,MAAM0B,cAAc,GAAGzB,YAAY,GAAGiB,SAAf,GAA2BS,UAA3B,CAAsC,KAAtC,CAAvB;AACP,OAAO,MAAMC,eAAe,GAAG3B,YAAY,GAAGiB,SAAf,GAA2BS,UAA3B,CAAsC,MAAtC,CAAxB;AACP,OAAO,MAAME,eAAe,GAAG5B,YAAY,GAAGiB,SAAf,GAA2BS,UAA3B,CAAsC,MAAtC,CAAxB;AACP,OAAO,MAAMG,mBAAmB,GAAG7B,YAAY,GAAGiB,SAAf,GAA2BS,UAA3B,CAAsC,UAAtC,CAA5B;AAEP,OAAO,MAAMI,oBAAoB,GAAG,MAAOJ,UAAP,IAAsB;AACxD,QAAMK,aAAa,GAAG,MAAML,UAAU,CAACM,GAAX,EAA5B;AACA,MAAIC,IAAI,GAAG,EAAX;AACAF,EAAAA,aAAa,CAACG,OAAd,CAAsBC,GAAG,IAAI;AACzBF,IAAAA,IAAI,CAACG,IAAL,CAAUC,MAAM,CAACC,MAAP,CAAc;AACtBL,MAAAA,IAAI,EAAGE,GAAG,CAACF,IAAJ,EADe;AAEtBM,MAAAA,EAAE,EAAEJ,GAAG,CAACI;AAFc,KAAd,CAAV;AAID,GALH;AAMA,SAAON,IAAP;AACD,CAVM","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nexport function loadFirebase(){\r\n    try{\r\n  const Config = {\r\n    apiKey: process.env.FIREBASE_API_KEY,\r\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n    projectId: process.env.FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\r\n   \r\n  };\r\n \r\n  firebase.initializeApp(Config);\r\n  firebase.firestore().settings({timestampsInSnapshots:true})\r\n  \r\n \r\n}catch (error){\r\n    if(!/already exist/.test(error.message)){\r\n        console.log(`Firebase did not initialize correctly:${error.message}`)\r\n    }\r\n}\r\nreturn firebase\r\n}\r\nexport const JOB_COLLECTION = loadFirebase().firestore().collection('job')\r\nexport const AREA_COLLECTION = loadFirebase().firestore().collection('area')\r\nexport const CITY_COLLECTION = loadFirebase().firestore().collection('city')\r\nexport const EMPLOYER_COLLECTION = loadFirebase().firestore().collection('employer') \r\n\r\nexport const getCollectionRecords = async (collection) => {\r\n  const querySnapshot = await collection.get()\r\n  let data = []\r\n  querySnapshot.forEach(doc => {\r\n      data.push(Object.assign({\r\n        data : doc.data(),\r\n        id: doc.id,\r\n      }))\r\n    })\r\n  return data \r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}