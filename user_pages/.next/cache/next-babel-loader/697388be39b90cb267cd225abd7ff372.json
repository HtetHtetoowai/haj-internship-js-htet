{"ast":null,"code":"import firebase, { app } from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.FIREBASE_DATABASE_URL,\n  projectId: process.env.FIREBASE_PROJECT_ID,\n  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID\n}; // Initialize Firebase\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const JOB_COLLECTION = firebase.firestore().collection('job');\nexport const AREA_COLLECTION = firebase.firestore().collection('area');\nexport const CITY_COLLECTION = firebase.firestore().collection('city');\nexport const EMPLOYER_COLLECTION = firebase.firestore().collection('employer');\nexport const USER_COLLECTION = firebase.firestore().collection('user');\nexport const getCollectionRecords = async (collection, limit = 0) => {\n  let data = [];\n  let query = collection;\n\n  if (limit > 0) {\n    query = query.limit(limit);\n  }\n\n  const querySnapshot = await query.get();\n  querySnapshot.forEach(doc => {\n    data.push(Object.assign({\n      id: doc.id,\n      data: doc.data()\n    }));\n  });\n  return data;\n};\nexport default firebase;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/user_pages/lib/db.js"],"names":["firebase","app","firebaseConfig","apiKey","process","env","FIREBASE_API_KEY","authDomain","FIREBASE_AUTH_DOMAIN","databaseURL","FIREBASE_DATABASE_URL","projectId","FIREBASE_PROJECT_ID","storageBucket","FIREBASE_STORAGE_BUCKET","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","apps","length","initializeApp","auth","db","firestore","JOB_COLLECTION","collection","AREA_COLLECTION","CITY_COLLECTION","EMPLOYER_COLLECTION","USER_COLLECTION","getCollectionRecords","limit","data","query","querySnapshot","get","forEach","doc","push","Object","assign","id"],"mappings":"AAAA,OAAOA,QAAP,IAAmBC,GAAnB,QAA8B,cAA9B;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADC;AAErBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFH;AAGrBC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,qBAHJ;AAIrBC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,mBAJF;AAKrBC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,uBALN;AAMrBC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANV,CAAvB,C,CAQA;;AACA,IAAG,CAAChB,QAAQ,CAACiB,IAAT,CAAcC,MAAlB,EAAyB;AACrBlB,EAAAA,QAAQ,CAACmB,aAAT,CAAuBjB,cAAvB;AACH;;AACD,OAAO,MAAMkB,IAAI,GAAGpB,QAAQ,CAACoB,IAAT,EAAb;AACP,OAAO,MAAMC,EAAE,GAAGrB,QAAQ,CAACsB,SAAT,EAAX;AACP,OAAO,MAAMC,cAAc,GAAGvB,QAAQ,CAACsB,SAAT,GAAqBE,UAArB,CAAgC,KAAhC,CAAvB;AACP,OAAO,MAAMC,eAAe,GAAGzB,QAAQ,CAACsB,SAAT,GAAqBE,UAArB,CAAgC,MAAhC,CAAxB;AACP,OAAO,MAAME,eAAe,GAAG1B,QAAQ,CAACsB,SAAT,GAAqBE,UAArB,CAAgC,MAAhC,CAAxB;AACP,OAAO,MAAMG,mBAAmB,GAAG3B,QAAQ,CAACsB,SAAT,GAAqBE,UAArB,CAAgC,UAAhC,CAA5B;AACP,OAAO,MAAMI,eAAe,GAAG5B,QAAQ,CAACsB,SAAT,GAAqBE,UAArB,CAAgC,MAAhC,CAAxB;AAEP,OAAO,MAAMK,oBAAoB,GAAG,OAAOL,UAAP,EAAkBM,KAAK,GAAC,CAAxB,KAA8B;AAChE,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAIR,UAAb;;AACA,MAAGM,KAAK,GAAC,CAAT,EAAY;AACVE,IAAAA,KAAK,GAAGA,KAAK,CAACF,KAAN,CAAYA,KAAZ,CAAR;AACD;;AACD,QAAMG,aAAa,GAAG,MAAMD,KAAK,CAACE,GAAN,EAA5B;AACAD,EAAAA,aAAa,CAACE,OAAd,CAAsBC,GAAG,IAAI;AACzBL,IAAAA,IAAI,CAACM,IAAL,CAAUC,MAAM,CAACC,MAAP,CACN;AAACC,MAAAA,EAAE,EAAGJ,GAAG,CAACI,EAAV;AACFT,MAAAA,IAAI,EAAGK,GAAG,CAACL,IAAJ;AADL,KADM,CAAV;AAID,GALH;AAMA,SAAOA,IAAP;AACD,CAdM;AAgBP,eAAe/B,QAAf","sourcesContent":["import firebase, { app } from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.FIREBASE_API_KEY,\r\n  authDomain: process.env.FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n  projectId: process.env.FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\r\n};\r\n// Initialize Firebase\r\nif(!firebase.apps.length){\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\nexport const JOB_COLLECTION = firebase.firestore().collection('job')\r\nexport const AREA_COLLECTION = firebase.firestore().collection('area')\r\nexport const CITY_COLLECTION = firebase.firestore().collection('city')\r\nexport const EMPLOYER_COLLECTION = firebase.firestore().collection('employer') \r\nexport const USER_COLLECTION = firebase.firestore().collection('user') \r\n\r\nexport const getCollectionRecords = async (collection,limit=0) => {\r\n  let data = []\r\n  let query =  collection\r\n  if(limit>0) {\r\n    query = query.limit(limit)\r\n  }\r\n  const querySnapshot = await query.get()\r\n  querySnapshot.forEach(doc => {\r\n      data.push(Object.assign(\r\n          {id : doc.id,\r\n        data : doc.data()}\r\n      ))\r\n    })\r\n  return data \r\n} \r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}