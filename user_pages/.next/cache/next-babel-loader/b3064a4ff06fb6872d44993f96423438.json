{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase, { app } from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nexport function loadFirebase() {\n  try {\n    // initialize database\n    var config = {\n      apiKey: process.env.FIREBASE_API_KEY,\n      authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n      databaseURL: process.env.FIREBASE_DATABASE_URL,\n      projectId: process.env.FIREBASE_PROJECT_ID,\n      storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n      messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n      appId: process.env.FIREBASE_APPID,\n      measurementId: process.env.FIREBASE_MEASUREMENT_ID\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n\n  return firebase;\n}\nexport var db = firebase.firestore();\nexport var JOB_COLLECTION = firebase.firestore().collection('job');\nexport var AREA_COLLECTION = firebase.firestore().collection('area');\nexport var CITY_COLLECTION = firebase.firestore().collection('city');\nexport var EMPLOYER_COLLECTION = firebase.firestore().collection('employer');\nexport var USER_COLLECTION = firebase.firestore().collection('user');\nexport var getCollectionRecords = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(collection) {\n    var limit,\n        data,\n        query,\n        querySnapshot,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            limit = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n            data = [];\n            query = collection;\n\n            if (limit > 0) {\n              query = query.limit(limit);\n            }\n\n            _context.next = 6;\n            return query.get();\n\n          case 6:\n            querySnapshot = _context.sent;\n            querySnapshot.forEach(function (doc) {\n              data.push(Object.assign({\n                id: doc.id,\n                data: doc.data()\n              }));\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getCollectionRecords(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default firebase;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/user_pages/lib/db.js"],"names":["firebase","app","loadFirebase","config","apiKey","process","env","FIREBASE_API_KEY","authDomain","FIREBASE_AUTH_DOMAIN","databaseURL","FIREBASE_DATABASE_URL","projectId","FIREBASE_PROJECT_ID","storageBucket","FIREBASE_STORAGE_BUCKET","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","appId","FIREBASE_APPID","measurementId","FIREBASE_MEASUREMENT_ID","apps","length","initializeApp","error","console","log","message","db","firestore","JOB_COLLECTION","collection","AREA_COLLECTION","CITY_COLLECTION","EMPLOYER_COLLECTION","USER_COLLECTION","getCollectionRecords","limit","data","query","get","querySnapshot","forEach","doc","push","Object","assign","id"],"mappings":";;AAAA,OAAOA,QAAP,IAAmBC,GAAnB,QAA8B,cAA9B;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC7B,MAAG;AACC;AACA,QAAMC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADT;AAEXC,MAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFb;AAGXC,MAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,qBAHd;AAIXC,MAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,mBAJZ;AAKXC,MAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,uBALhB;AAMXC,MAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,4BANpB;AAOXC,MAAAA,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYa,cAPR;AAQXC,MAAAA,aAAa,EAAEf,OAAO,CAACC,GAAR,CAAYe;AARhB,KAAf;;AAUA,QAAG,CAACrB,QAAQ,CAACsB,IAAT,CAAcC,MAAlB,EAAyB;AACvBvB,MAAAA,QAAQ,CAACwB,aAAT,CAAuBrB,MAAvB;AACH;AAEF,GAhBD,CAgBC,OAAMsB,KAAN,EAAY;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACP;;AACD,SAAO5B,QAAP;AACD;AAED,OAAO,IAAM6B,EAAE,GAAG7B,QAAQ,CAAC8B,SAAT,EAAX;AACP,OAAO,IAAMC,cAAc,GAAG/B,QAAQ,CAAC8B,SAAT,GAAqBE,UAArB,CAAgC,KAAhC,CAAvB;AACP,OAAO,IAAMC,eAAe,GAAGjC,QAAQ,CAAC8B,SAAT,GAAqBE,UAArB,CAAgC,MAAhC,CAAxB;AACP,OAAO,IAAME,eAAe,GAAGlC,QAAQ,CAAC8B,SAAT,GAAqBE,UAArB,CAAgC,MAAhC,CAAxB;AACP,OAAO,IAAMG,mBAAmB,GAAGnC,QAAQ,CAAC8B,SAAT,GAAqBE,UAArB,CAAgC,UAAhC,CAA5B;AACP,OAAO,IAAMI,eAAe,GAAGpC,QAAQ,CAAC8B,SAAT,GAAqBE,UAArB,CAAgC,MAAhC,CAAxB;AAEP,OAAO,IAAMK,oBAAoB;AAAA,sEAAG,iBAAOL,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBM,YAAAA,KAAlB,2DAAwB,CAAxB;AAC9BC,YAAAA,IAD8B,GACvB,EADuB;AAE9BC,YAAAA,KAF8B,GAErBR,UAFqB;;AAGlC,gBAAGM,KAAK,GAAC,CAAT,EAAY;AACVE,cAAAA,KAAK,GAAGA,KAAK,CAACF,KAAN,CAAYA,KAAZ,CAAR;AACD;;AALiC;AAAA,mBAMNE,KAAK,CAACC,GAAN,EANM;;AAAA;AAM5BC,YAAAA,aAN4B;AAOlCA,YAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG,EAAI;AACzBL,cAAAA,IAAI,CAACM,IAAL,CAAUC,MAAM,CAACC,MAAP,CACN;AAACC,gBAAAA,EAAE,EAAGJ,GAAG,CAACI,EAAV;AACFT,gBAAAA,IAAI,EAAGK,GAAG,CAACL,IAAJ;AADL,eADM,CAAV;AAID,aALH;AAPkC,6CAa3BA,IAb2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBF,oBAAoB;AAAA;AAAA;AAAA,GAA1B;AAgBP,eAAerC,QAAf","sourcesContent":["import firebase, { app } from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nexport function loadFirebase (){\r\n  try{\r\n      // initialize database\r\n      const config = {\r\n          apiKey: process.env.FIREBASE_API_KEY,\r\n          authDomain: process.env.FIREBASE_AUTH_DOMAIN,\r\n          databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n          projectId: process.env.FIREBASE_PROJECT_ID,\r\n          storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\r\n          messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\r\n          appId: process.env.FIREBASE_APPID,\r\n          measurementId: process.env.FIREBASE_MEASUREMENT_ID\r\n      };\r\n      if(!firebase.apps.length){\r\n        firebase.initializeApp(config);\r\n    }\r\n    \r\n  }catch(error){\r\n          console.log(error.message)\r\n  }\r\n  return firebase;\r\n}\r\n\r\nexport const db = firebase.firestore();\r\nexport const JOB_COLLECTION = firebase.firestore().collection('job')\r\nexport const AREA_COLLECTION = firebase.firestore().collection('area')\r\nexport const CITY_COLLECTION = firebase.firestore().collection('city')\r\nexport const EMPLOYER_COLLECTION = firebase.firestore().collection('employer') \r\nexport const USER_COLLECTION = firebase.firestore().collection('user') \r\n\r\nexport const getCollectionRecords = async (collection,limit=0) => {\r\n  let data = []\r\n  let query =  collection\r\n  if(limit>0) {\r\n    query = query.limit(limit)\r\n  }\r\n  const querySnapshot = await query.get()\r\n  querySnapshot.forEach(doc => {\r\n      data.push(Object.assign(\r\n          {id : doc.id,\r\n        data : doc.data()}\r\n      ))\r\n    })\r\n  return data \r\n} \r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}