{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\user_pages\\\\pages\\\\filter.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { db, getCollectionRecords, AREA_COLLECTION, CITY_COLLECTION, EMPLOYER_COLLECTION, JOB_COLLECTION } from \"../lib/db\";\nexport default class JobListing extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"applyFilter\", async () => {\n      this.$datatable.clear();\n      let jobs = [];\n      let toReturnJobs = [];\n      let REGENERATED_IDS = [];\n      console.log(this.state);\n      const today = new Date();\n\n      try {\n        let query = db.collection('job');\n\n        if (this.state.employment_type !== \"\") {\n          query = query.where('employment_type', '==', this.state.employment_type);\n        }\n\n        if (this.state.area !== \"\") {\n          query = query.where('area', '==', this.state.area);\n        }\n\n        if (this.state.city !== \"\") {\n          query = query.where('city', '==', this.state.city);\n        }\n\n        if (this.state.min_salary !== \"\") {\n          query = query.where('min_salary', '>=', parseInt(this.state.min_salary));\n        }\n\n        if (this.state.min_exp_year !== \"\") {\n          query = query.where('min_exp_year', '<=', parseInt(this.state.min_exp_year));\n        }\n\n        if (this.state.min_lang_skill !== \"\") {\n          query = query.where('min_lang_skill', '<=', parseInt(this.state.min_lang_skill));\n        }\n\n        query.get().then(snaphsot => {\n          snaphsot.forEach(doc => {\n            if (this.state.posted_within !== \"\") {\n              if (this.state.posted_within == '1') {\n                if (this.checkDateEqual(doc.data().posted_date)) {\n                  jobs.push(Object.assign({\n                    id: doc.id,\n                    data: doc.data()\n                  }));\n                }\n              } else if (this.state.posted_within == '2') {\n                if (this.checkDateLastThreeDays(doc.data().posted_date)) {\n                  jobs.push(Object.assign({\n                    id: doc.id,\n                    data: doc.data()\n                  }));\n                }\n              } else if (this.state.posted_within == '3') {\n                if (this.checkDateLastSevenDays(doc.data().posted_date)) {\n                  jobs.push(Object.assign({\n                    id: doc.id,\n                    data: doc.data()\n                  }));\n                }\n              } else if (this.state.posted_within == '4') {\n                if (this.checkDateThisMonth(doc.data().posted_date)) {\n                  jobs.push(Object.assign({\n                    id: doc.id,\n                    data: doc.data()\n                  }));\n                }\n              }\n            } else {\n              jobs.push(Object.assign({\n                id: doc.id,\n                data: doc.data()\n              }));\n            }\n          });\n          REGENERATED_IDS = [...new Set(jobs.map(job => job.id))];\n\n          if (REGENERATED_IDS.length > 0) {\n            REGENERATED_IDS.forEach(id => {\n              db.collection('job').doc(id).get().then(snapshot => {\n                toReturnJobs.push(Object.assign({\n                  id: id,\n                  data: snapshot.data()\n                }));\n                this.setState({\n                  regenerated_jobs: toReturnJobs\n                });\n              });\n            });\n          }\n\n          this.setState({\n            regenerated_jobs: toReturnJobs\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"checkDateEqual\", dateobj => {\n      const today = new Date();\n      var d = new Date(1970, 0, 1);\n      d.setSeconds(dateobj.seconds);\n\n      if (d.getDate() + 1 == today.getDate()) {\n        return true;\n      } else return false;\n    });\n\n    _defineProperty(this, \"checkDateLastThreeDays\", dateobj => {\n      const today = new Date();\n      var d = new Date(1970, 0, 1);\n      d.setSeconds(dateobj.seconds);\n      console.log(`Last 3 days is ${today.getDate() - 3}`);\n\n      if (today.getDate() - 3 <= d.getDate() + 1 && d.getDate() + 1 <= today.getDate()) {\n        return true;\n      } else return false;\n    });\n\n    _defineProperty(this, \"checkDateLastSevenDays\", dateobj => {\n      const today = new Date();\n      var d = new Date(1970, 0, 1);\n      d.setSeconds(dateobj.seconds);\n      console.log(`Last 3 days is ${today.getDate() - 7}`);\n\n      if (today.getDate() - 7 <= d.getDate() + 1 && d.getDate() + 1 <= today.getDate()) {\n        console.log(\"true\");\n        return true;\n      } else return false;\n    });\n\n    _defineProperty(this, \"checkDateThisMonth\", dateobj => {\n      let today = new Date();\n      var d = new Date(1970, 0, 1);\n      d.setSeconds(dateobj.seconds);\n\n      if (Math.floor((Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()) - Date.UTC(d.getFullYear(), d.getMonth(), d.getDate())) / (1000 * 60 * 60 * 24)) <= 30) {\n        console.log(\"true\");\n        return true;\n      } else {\n        console.log(\"false\");\n        return false;\n      }\n    });\n\n    _defineProperty(this, \"resetFilter\", () => {\n      this.setState(this.initialState);\n      console.log(this.state);\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n\n      if (event.target.name == \"area\") {\n        this.getAreaName(event.target.value);\n        this.getCities(event.target.value);\n        this.setState({\n          showCities: true\n        });\n      }\n\n      if (event.target.name == \"area\" && event.target.value == \"\") {\n        this.setState({\n          showCities: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"reGenerateJobs\", event => {\n      let jobs = [];\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n\n      if (this.state.regenerated_jobs.length == this.props.jobs.length) {\n        if (event.target.value == \"old_to_new\") {\n          try {\n            db.collection('job').orderBy('posted_date').get().then(snaphsot => {\n              snaphsot.forEach(doc => {\n                jobs.push(Object.assign({\n                  id: doc.id,\n                  data: doc.data()\n                }));\n              });\n              this.setState({\n                regenerated_jobs: jobs\n              });\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        } else if (event.target.value == \"new_to_old\") {\n          try {\n            db.collection('job').orderBy('posted_date').get().then(snaphsot => {\n              snaphsot.forEach(doc => {\n                jobs.push(Object.assign({\n                  id: doc.id,\n                  data: doc.data()\n                }));\n              });\n              this.setState({\n                regenerated_jobs: jobs.reverse()\n              });\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        } else {\n          try {\n            db.collection('job').get().then(snaphsot => {\n              snaphsot.forEach(doc => {\n                jobs.push(Object.assign({\n                  id: doc.id,\n                  data: doc.data()\n                }));\n              });\n              this.setState({\n                regenerated_jobs: jobs\n              });\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      } else {\n        jobs = this.state.regenerated_jobs;\n\n        if (event.target.value == \"old_to_new\") {\n          jobs.sort(function (a, b) {\n            return a.data.posted_date - b.data.posted_date;\n          });\n          this.setState({\n            regenerated_jobs: jobs\n          });\n        } else if (event.target.value == \"new_to_old\") {\n          jobs.sort(function (a, b) {\n            return b.data.posted_date - a.data.posted_date;\n          });\n          this.setState({\n            regenerated_jobs: jobs\n          });\n        } else {\n          jobs = this.state.regenerated_jobs;\n          this.setState({\n            regenerated_jobs: jobs\n          });\n        }\n      }\n    });\n\n    _defineProperty(this, \"getCities\", id => {\n      let cities = [];\n\n      try {\n        db.collection('city').where('area_id', \"==\", id).get().then(snapshot => {\n          snapshot.forEach(doc => {\n            cities.push(Object.assign({\n              id: doc.id,\n              data: doc.data()\n            }));\n          });\n          this.setState({\n            cities\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"getCompanyName\", id => {\n      const companies = this.props.companies;\n      let name = '';\n      companies.map(company => {\n        if (company.id == id) {\n          name = company.data.name;\n        }\n      });\n      return name;\n    });\n\n    _defineProperty(this, \"getLocation\", (city_id, area_id) => {\n      const cities = this.props.cities;\n      const areas = this.props.areas;\n      let city_name = '';\n      let area_name = '';\n      cities.map(city => {\n        if (city.id == city_id) {\n          city_name = city.data.name;\n        }\n      });\n      areas.map(area => {\n        if (area.id == area_id) {\n          area_name = area.data.name;\n        }\n      });\n      return city_name + \",\" + area_name;\n    });\n\n    _defineProperty(this, \"getAreaName\", id => {\n      let area = {};\n\n      try {\n        db.collection('area').doc(id).get().then(snapshot => {\n          area = snapshot.data();\n          this.setState({\n            areaName: area.name\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"getDateString\", obj => {\n      var t = new Date(1970, 0, 1);\n      t.setSeconds(obj.seconds); // console.log(t)\n      // console.log(t.getDate()+1+'/'+(t.getMonth()+1)+'/'+t.getFullYear()+' '+ t.getHours()+':'+ t.getMinutes()+':'+ t.getSeconds()+'-'+t.getTimezoneOffset())\n\n      return t.getDate() + '/' + (t.getMonth() + 1) + '/' + t.getFullYear();\n    });\n\n    _defineProperty(this, \"filterShow\", () => {\n      $(\"#filterModal\").modal('show');\n    });\n\n    _defineProperty(this, \"quickView\", id => {\n      let job = {};\n\n      try {\n        db.collection('job').doc(id).get().then(snapshot => {\n          job = snapshot.data();\n          this.setState({\n            view_title: job.title,\n            view_min_salary: job.min_salary,\n            view_max_salary: job.max_salary,\n            view_employment_type: job.employment_type,\n            view_vacancy: job.vacancy,\n            view_min_age: job.min_age,\n            view_work_day: job.work_day,\n            view_work_hour: job.work_hour,\n            view_min_lang_skill: job.min_lang_skill,\n            view_min_exp_year: job.min_exp_year,\n            view_area: job.area,\n            view_city: job.city,\n            view_job_address: job.job_address,\n            view_company: job.company,\n            view_description: job.description,\n            view_requirement: job.requirement,\n            view_other_qualification: job.other_qualification,\n            view_other_message: job.other_message,\n            view_posted_date: job.posted_date\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    this.handleChange = this.handleChange.bind(this);\n    this.datatableRef = React.createRef();\n    this.$datatable = null;\n    this.initialState = {\n      area: props.location || '',\n      areaName: props.areaName || '',\n      city: '',\n      employment_type: props.type || '',\n      min_exp_year: '',\n      min_lang_skill: '',\n      posted_within: '',\n      min_salary: '',\n      max_salary: '',\n      regenerated_jobs: props.jobs || [],\n      showCities: false,\n      cities: props.dyanmic_cities || []\n    };\n    this.state = this.initialState;\n  }\n\n  static async getInitialProps({\n    req,\n    res,\n    query\n  }) {\n    let jobs = [];\n    let areas = await getCollectionRecords(AREA_COLLECTION);\n    let area = {};\n    let cities = await getCollectionRecords(CITY_COLLECTION);\n    let dyanmic_cities = [];\n    let companies = await getCollectionRecords(EMPLOYER_COLLECTION);\n    let querysnapshot = db.collection('job');\n\n    if (query.type !== \"\") {\n      querysnapshot = querysnapshot.where('employment_type', '==', query.type);\n    }\n\n    if (query.location !== \"\") {\n      querysnapshot = querysnapshot.where('area', '==', query.location); //get the passed area\n\n      try {\n        db.collection('area').doc(query.location).get().then(snapshot => {\n          area = snapshot.data();\n        });\n      } catch (error) {\n        console.log(error);\n      } //get the cities existing passed area\n\n\n      try {\n        db.collection('city').where('area_id', \"==\", query.location).get().then(snapshot => {\n          snapshot.forEach(doc => {\n            dyanmic_cities.push(Object.assign({\n              id: doc.id,\n              data: doc.data()\n            }));\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    const querySnapshotJob = await querysnapshot.get();\n    querySnapshotJob.forEach(doc => {\n      jobs.push(Object.assign({\n        id: doc.id,\n        data: doc.data()\n      }));\n    });\n    return _objectSpread(_objectSpread({}, query), {}, {\n      areaName: area.name,\n      jobs,\n      areas,\n      cities,\n      dyanmic_cities,\n      companies\n    });\n  }\n\n  componentDidMount() {\n    this.initializeDatatable();\n  }\n\n  initializeDatatable() {\n    this.$datatable = $(this.datatableRef.current).DataTable({\n      \"pagingType\": \"full\",\n      \"ordering\": false,\n      \"bInfo\": false\n    });\n  }\n\n  refreshTable() {\n    this.$datatable.clear();\n    const self = this;\n    JobListing.getInitialProps().then(response => {\n      self.setState({\n        regenerated_jobs: response.jobs\n      });\n    }).bind(this);\n  }\n\n  render() {\n    const all_jobs = this.state.regenerated_jobs;\n    const areas = this.props.areas;\n    const cities = this.state.cities;\n    const viewCities = this.props.cities;\n    const stateObj = this.state;\n    return __jsx(\"html\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }\n    }, __jsx(\"body\", {\n      id: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 13\n      }\n    }, __jsx(\"nav\", {\n      className: \"navbar nav-color sticky-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"site-logo col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      href: \"index\",\n      style: {\n        fontSize: 30,\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 46\n      }\n    }, \"Nursing Job \", __jsx(\"b\", {\n      style: {\n        color: \"rgb(187, 7, 106)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 112\n      }\n    }, \"Agency\"))), __jsx(\"a\", {\n      href: \"index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }\n    }, \"Home\"), __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 13\n      }\n    }, \"About\"), __jsx(\"a\", {\n      href: \"contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }\n    }, \"Contact\"), __jsx(\"a\", {\n      href: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }\n    }, \"Filter\"), __jsx(\"a\", {\n      class: \"btn btn-float signin\",\n      href: \"login\",\n      role: \"button\",\n      style: {\n        background: \"rgb(187, 7, 106)\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }\n    }, \"Sign In\")), __jsx(\"div\", {\n      className: \"site-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 15\n      }\n    }, __jsx(\"section\", {\n      className: \"section-hero overlay inner-page bg-image\",\n      style: {\n        backgroundImage: \"url('/images/1.png')\"\n      },\n      id: \"home-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 15\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 17\n      }\n    }), __jsx(\"h1\", {\n      className: \"font-weight-bold text-center\",\n      style: {\n        color: \"rgba(187, 7, 106)\",\n        width: 600,\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 15\n      }\n    }, \"A Powerful Job Agency\")), __jsx(\"section\", {\n      className: \"site-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"row mb-5 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"col-md-7 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 21\n      }\n    }, __jsx(\"h2\", {\n      className: \"section-title mb-2\",\n      style: {\n        color: \"rgba(187, 7, 106)\",\n        marginLeft: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 23\n      }\n    }, `${all_jobs.length} - Jobs Found`))), __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"select-job-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 23\n      }\n    }, \"Sort by\"), __jsx(\"select\", {\n      name: \"sortby\",\n      style: {\n        marginRight: 1 + \"em\"\n      },\n      onChange: this.reGenerateJobs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 23\n      }\n    }, __jsx(\"option\", {\n      value: \"new_to_old\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 27\n      }\n    }, \"Newest to Oldest\"), __jsx(\"option\", {\n      value: \"old_to_new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 27\n      }\n    }, \"Oldest to Newest\"))), __jsx(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 17\n      }\n    }))), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 16\n      }\n    }), __jsx(\"ul\", {\n      style: {\n        width: 100 + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 15\n      }\n    }, this.state.regenerated_jobs && this.state.regenerated_jobs.map(job => __jsx(\"li\", {\n      id: job.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 22\n      }\n    }, __jsx(\"div\", {\n      className: \"row align-items-start job-item  pb-2 mb pt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 22\n      }\n    }, __jsx(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 23\n      }\n    }, __jsx(Link, {\n      href: `/job-single?id=${job.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: \"images/featured-listing-1.jpg\",\n      alt: \"Image\",\n      className: \"img-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 65\n      }\n    }))), __jsx(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 23\n      }\n    }, __jsx(\"span\", {\n      className: \"badge px-2 py-1 mb-3\",\n      style: {\n        background: \"rgb(187, 7, 106)\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 25\n      }\n    }, `${job.data.J_Contract}`), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 25\n      }\n    }, __jsx(Link, {\n      href: `/job-single?id=${job.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      style: {\n        color: \"#3c3c3c\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 69\n      }\n    }, `${job.data.Jname}`))), __jsx(\"p\", {\n      className: \"meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 25\n      }\n    }, \"Employer: \", __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 55\n      }\n    }, this.getCompanyName(job.data.EMPLOYERID), \"\\xA0\\xA0\\xA0\"), \"Posted In: \", __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 143\n      }\n    }, `${this.getDateString(job.data.PostedDate)}`))), __jsx(\"div\", {\n      className: \"col-md-3 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 23\n      }\n    }, __jsx(\"h3\", {\n      style: {\n        color: \"#3c3c3c\",\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 25\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 67\n      }\n    }, this.getCityLocation(job.data.J_city))), __jsx(\"span\", {\n      className: \"meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 25\n      }\n    }, this.getAreaLocation(job.data.J_area))), __jsx(\"div\", {\n      className: \"col-md-3 text-md-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 23\n      }\n    }, __jsx(\"strong\", {\n      style: {\n        color: \"#3c3c3c\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 25\n      }\n    }, \"\\xA5\", `${job.data.J_min_salary} ~ ¥${job.data.J_max_salary}`))))))), __jsx(\"div\", {\n      className: \"pagination-area pb-115 text-center \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"container \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"col-xl-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"single-wrap d-flex justify-content-center \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 25\n      }\n    }, __jsx(\"nav\", {\n      \"aria-label\": \"Page navigation example \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 29\n      }\n    }, __jsx(\"ul\", {\n      className: \"pagination justify-content-start \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 33\n      }\n    }, __jsx(\"li\", {\n      className: \"page-item \",\n      onClick: this.goFirst,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 37\n      }\n    }, __jsx(\"a\", {\n      className: \"page-link \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 87\n      }\n    }, \"First\")), this.state.current_start > 0 && __jsx(\"li\", {\n      className: \"page-item \",\n      onClick: this.backwardPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 71\n      }\n    }, __jsx(\"a\", {\n      className: \"page-link \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 126\n      }\n    }, __jsx(\"span\", {\n      className: \"ti-angle-left \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 153\n      }\n    }))), all_jobs.length >= this.state.current_start && __jsx(\"li\", {\n      className: \"page-item \",\n      onClick: this.forwardPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 86\n      }\n    }, __jsx(\"a\", {\n      className: \"page-link \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 140\n      }\n    }, __jsx(\"span\", {\n      className: \"ti-angle-right \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 167\n      }\n    }))), __jsx(\"li\", {\n      className: \"page-item \",\n      onClick: this.goLast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 37\n      }\n    }, __jsx(\"a\", {\n      className: \"page-link \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 86\n      }\n    }, \"Last\"))))))))))), __jsx(\"footer\", {\n      className: \"site-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"row mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"col-6 col-md-3 mb-4 mb-md-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 21\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 23\n      }\n    }, \"Address\"), __jsx(\"ul\", {\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 23\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 29\n      }\n    }, \"87,Ward Tyokyo,Japan \")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 29\n      }\n    }, \"nursejobagency@gmail.com\")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 29\n      }\n    }, \"864-11-222\")))), __jsx(\"div\", {\n      className: \"col-6 col-md-3 mb-4 mb-md-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 21\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 23\n      }\n    }, \"Company\"), __jsx(\"ul\", {\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 23\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 29\n      }\n    }, \"About Us\")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 29\n      }\n    }, \"Resources\")))), __jsx(\"div\", {\n      className: \"col-6 col-md-3 mb-4 mb-md-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 21\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 23\n      }\n    }, \"Support\"), __jsx(\"ul\", {\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 23\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 29\n      }\n    }, \"Support\")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 29\n      }\n    }, \"Privacy\")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 29\n      }\n    }, \"Terms of Service\")))), __jsx(\"div\", {\n      className: \"col-6 col-md-3 mb-4 mb-md-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 21\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 23\n      }\n    }, \"Contact Us\"), __jsx(\"div\", {\n      className: \"footer-social\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 23\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 25\n      }\n    }, __jsx(\"span\", {\n      className: \"icon-facebook\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 37\n      }\n    })), __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 25\n      }\n    }, __jsx(\"span\", {\n      className: \"icon-twitter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 37\n      }\n    })), __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 25\n      }\n    }, __jsx(\"span\", {\n      className: \"icon-instagram\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 37\n      }\n    })), __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 25\n      }\n    }, __jsx(\"span\", {\n      className: \"icon-linkedin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 37\n      }\n    }))))))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/user_pages/pages/filter.js"],"names":["React","Link","db","getCollectionRecords","AREA_COLLECTION","CITY_COLLECTION","EMPLOYER_COLLECTION","JOB_COLLECTION","JobListing","Component","constructor","props","$datatable","clear","jobs","toReturnJobs","REGENERATED_IDS","console","log","state","today","Date","query","collection","employment_type","where","area","city","min_salary","parseInt","min_exp_year","min_lang_skill","get","then","snaphsot","forEach","doc","posted_within","checkDateEqual","data","posted_date","push","Object","assign","id","checkDateLastThreeDays","checkDateLastSevenDays","checkDateThisMonth","Set","map","job","length","snapshot","setState","regenerated_jobs","error","dateobj","d","setSeconds","seconds","getDate","Math","floor","UTC","getFullYear","getMonth","initialState","event","target","name","value","getAreaName","getCities","showCities","orderBy","reverse","sort","a","b","cities","companies","company","city_id","area_id","areas","city_name","area_name","areaName","obj","t","$","modal","view_title","title","view_min_salary","view_max_salary","max_salary","view_employment_type","view_vacancy","vacancy","view_min_age","min_age","view_work_day","work_day","view_work_hour","work_hour","view_min_lang_skill","view_min_exp_year","view_area","view_city","view_job_address","job_address","view_company","view_description","description","view_requirement","requirement","view_other_qualification","other_qualification","view_other_message","other_message","view_posted_date","handleChange","bind","datatableRef","createRef","location","type","dyanmic_cities","getInitialProps","req","res","querysnapshot","querySnapshotJob","componentDidMount","initializeDatatable","current","DataTable","refreshTable","self","response","render","all_jobs","viewCities","stateObj","fontSize","color","background","backgroundImage","width","margin","marginLeft","marginRight","reGenerateJobs","J_Contract","fontWeight","Jname","getCompanyName","EMPLOYERID","getDateString","PostedDate","getCityLocation","J_city","getAreaLocation","J_area","J_min_salary","J_max_salary","goFirst","current_start","backwardPage","forwardPage","goLast"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link'\r\nimport {db, getCollectionRecords, AREA_COLLECTION, CITY_COLLECTION, EMPLOYER_COLLECTION, JOB_COLLECTION} from \"../lib/db\";\r\n\r\n\r\nexport default class JobListing extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.datatableRef = React.createRef();\r\n    this.$datatable = null\r\n\r\n    this.initialState = {\r\n        area : props.location || '',\r\n        areaName : props.areaName || '',\r\n        city : '',\r\n        employment_type : props.type || '',\r\n        min_exp_year : '',\r\n        min_lang_skill : '',\r\n        posted_within : '',\r\n        min_salary : '',\r\n        max_salary : '',\r\n        regenerated_jobs : props.jobs || [],\r\n        showCities : false,\r\n        cities : props.dyanmic_cities || []\r\n    }\r\n    this.state = this.initialState\r\n    }\r\n\r\n    static async getInitialProps ({req,res,query}){ \r\n\r\n        let jobs = []\r\n        let areas = await getCollectionRecords(AREA_COLLECTION)\r\n        let area = {}\r\n        let cities = await getCollectionRecords(CITY_COLLECTION)\r\n        let dyanmic_cities = []\r\n        let companies = await getCollectionRecords(EMPLOYER_COLLECTION)\r\n\r\n\r\n        let querysnapshot = db.collection('job')\r\n        if(query.type !== \"\"){\r\n            querysnapshot = querysnapshot.where('employment_type','==',query.type)\r\n        }\r\n        if(query.location !== \"\"){\r\n            querysnapshot = querysnapshot.where('area','==',query.location)\r\n            //get the passed area\r\n            try{\r\n                db.collection('area').doc(query.location).get()\r\n                    .then((snapshot)=>{\r\n                        area = snapshot.data();\r\n                    })\r\n                }catch(error){\r\n                    console.log(error)\r\n            }\r\n            //get the cities existing passed area\r\n            try{\r\n                db.collection('city').where('area_id',\"==\",query.location).get().\r\n                then((snapshot)=>{\r\n                    snapshot.forEach(doc => {\r\n                        dyanmic_cities.push(Object.assign(\r\n                            {id : doc.id,\r\n                          data : doc.data()}\r\n                        ))\r\n                    })\r\n                })\r\n                \r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n\r\n            }\r\n\r\n        const querySnapshotJob = await querysnapshot.get()\r\n        querySnapshotJob.forEach(doc => {\r\n          jobs.push(Object.assign(\r\n              {id : doc.id,\r\n            data : doc.data()}\r\n          ))\r\n        })\r\n\r\n        \r\n        \r\n\r\n        return {...query, areaName : area.name, jobs, areas, cities, dyanmic_cities, companies}\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.initializeDatatable()\r\n    }\r\n    \r\n    initializeDatatable() {\r\n        this.$datatable = $(this.datatableRef.current).DataTable({\r\n            \"pagingType\": \"full\",\r\n            \"ordering\" : false,\r\n            \"bInfo\" : false\r\n        });\r\n    }\r\n\r\n    refreshTable() {\r\n        this.$datatable.clear()\r\n        const self = this;\r\n        JobListing\r\n        .getInitialProps()\r\n        .then((response) => {\r\n            self.setState({\r\n                regenerated_jobs: response.jobs\r\n            });\r\n        })\r\n        .bind(this);\r\n    }\r\n\r\n    \r\n    applyFilter = async () => {\r\n        this.$datatable.clear()\r\n        let jobs = []\r\n        let toReturnJobs = []\r\n        let REGENERATED_IDS = []\r\n        console.log(this.state)\r\n        const today = new Date()\r\n        try{\r\n            let query = db.collection('job')\r\n        if(this.state.employment_type !== \"\"){\r\n            query = query.where('employment_type','==',this.state.employment_type)\r\n        }\r\n        if(this.state.area !== \"\"){\r\n            query = query.where('area','==',this.state.area)\r\n        }\r\n        if(this.state.city !== \"\"){\r\n            query = query.where('city','==',this.state.city)\r\n        }\r\n        if(this.state.min_salary !== \"\"){\r\n            query = query.where('min_salary','>=',parseInt(this.state.min_salary))\r\n        }\r\n        if(this.state.min_exp_year !== \"\"){\r\n            query = query.where('min_exp_year','<=',parseInt(this.state.min_exp_year))\r\n        }\r\n        if(this.state.min_lang_skill !== \"\"){\r\n            query = query.where('min_lang_skill','<=',parseInt(this.state.min_lang_skill))\r\n        }\r\n\r\n            query.get()\r\n            .then(snaphsot => {\r\n                snaphsot.forEach(doc=>{\r\n\r\n                    if(this.state.posted_within !== \"\"){\r\n                        if(this.state.posted_within == '1'){\r\n                            if(this.checkDateEqual(doc.data().posted_date)){\r\n                                    jobs.push(Object.assign({\r\n                                        id : doc.id,\r\n                                        data : doc.data()\r\n                                    }))\r\n                            }\r\n                        }else if(this.state.posted_within == '2'){\r\n                            if(this.checkDateLastThreeDays(doc.data().posted_date)){\r\n                                    jobs.push(Object.assign({\r\n                                        id : doc.id,\r\n                                        data : doc.data()\r\n                                    }))\r\n                            }\r\n                        }else if(this.state.posted_within == '3'){\r\n                            if(this.checkDateLastSevenDays(doc.data().posted_date)){\r\n                                    jobs.push(Object.assign({\r\n                                        id : doc.id,\r\n                                        data : doc.data()\r\n                                    }))\r\n                            }\r\n                        }else if(this.state.posted_within == '4'){\r\n                            if(this.checkDateThisMonth(doc.data().posted_date)){\r\n                                jobs.push(Object.assign({\r\n                                    id : doc.id,\r\n                                    data : doc.data()\r\n                                }))\r\n                            }\r\n                        }\r\n                    }else{\r\n                        jobs.push(Object.assign({\r\n                            id : doc.id,\r\n                            data : doc.data()\r\n                        }))\r\n                    }\r\n                    \r\n                })\r\n\r\n                REGENERATED_IDS = [...new Set(jobs.map(job => job.id))] \r\n                if(REGENERATED_IDS.length > 0){\r\n                    REGENERATED_IDS.forEach(id => {\r\n                        db.collection('job').doc(id).get()\r\n                        .then(snapshot=>{\r\n                            toReturnJobs.push(Object.assign({id : id , data : snapshot.data()}))\r\n                            this.setState({regenerated_jobs : toReturnJobs})\r\n                        })\r\n                    })\r\n                    \r\n                }this.setState({regenerated_jobs : toReturnJobs})\r\n                \r\n            })\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n    checkDateEqual = (dateobj) => {\r\n        const today = new Date()\r\n        var d = new Date(1970, 0, 1);\r\n        d.setSeconds(dateobj.seconds)\r\n        if(d.getDate()+1 == today.getDate()){\r\n            return true\r\n        }else return false\r\n    }\r\n    checkDateLastThreeDays = (dateobj) => {\r\n        const today = new Date()\r\n        var d = new Date(1970, 0, 1);\r\n        d.setSeconds(dateobj.seconds)\r\n        console.log(`Last 3 days is ${today.getDate()-3}`)\r\n        if(today.getDate()-3 <= d.getDate()+1 && d.getDate()+1 <= today.getDate()){\r\n            return true\r\n        }else return false\r\n    }\r\n    checkDateLastSevenDays = (dateobj) => {\r\n        const today = new Date()\r\n        var d = new Date(1970, 0, 1);\r\n        d.setSeconds(dateobj.seconds)\r\n        console.log(`Last 3 days is ${today.getDate()-7}`)\r\n        if(today.getDate()-7 <= d.getDate()+1 && d.getDate()+1 <= today.getDate()){\r\n            console.log(\"true\")\r\n            return true\r\n        }else return false\r\n    }\r\n    checkDateThisMonth = (dateobj) => {\r\n        let today = new Date()\r\n        var d = new Date(1970, 0, 1);\r\n        d.setSeconds(dateobj.seconds)\r\n        if(Math.floor((Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()) - Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()) ) /(1000 * 60 * 60 * 24) )<= 30){\r\n            console.log(\"true\")\r\n            return true\r\n        }else {\r\n            console.log(\"false\")\r\n            return false\r\n        }\r\n    }\r\n\r\n    resetFilter = () => {\r\n        this.setState(this.initialState)\r\n        console.log(this.state)\r\n    }\r\n    \r\n    \r\n\r\nhandleChange = (event) => {\r\n    this.setState({[event.target.name] : event.target.value})\r\n    if(event.target.name == \"area\"){\r\n      this.getAreaName(event.target.value)\r\n      this.getCities(event.target.value)\r\n      this.setState({showCities : true})\r\n    }\r\n    if(event.target.name == \"area\" && event.target.value == \"\"){\r\n        this.setState({showCities : false})\r\n    }\r\n}\r\n\r\nreGenerateJobs = (event) => {\r\n    let jobs = []\r\n    this.setState({[event.target.name] : event.target.value})\r\n    if(this.state.regenerated_jobs.length == this.props.jobs.length){\r\n        if(event.target.value == \"old_to_new\")\r\n        {\r\n            try{\r\n                db.collection('job').orderBy('posted_date').get()\r\n                .then(snaphsot => {\r\n                    snaphsot.forEach(doc=>{\r\n                        jobs.push(Object.assign({\r\n                            id : doc.id,\r\n                            data : doc.data()\r\n                        }))\r\n                    })\r\n                    this.setState({regenerated_jobs : jobs})\r\n                })\r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n        }else if(event.target.value == \"new_to_old\")\r\n        {\r\n           \r\n            try{\r\n                db.collection('job').orderBy('posted_date').get()\r\n                .then(snaphsot => {\r\n                    snaphsot.forEach(doc=>{\r\n                        jobs.push(Object.assign({\r\n                            id : doc.id,\r\n                            data : doc.data()\r\n                        }))\r\n                    })\r\n                    this.setState({regenerated_jobs : jobs.reverse()})\r\n                })\r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n        }else {\r\n            try{\r\n                db.collection('job').get()\r\n                .then(snaphsot => {\r\n                    snaphsot.forEach(doc=>{\r\n                        jobs.push(Object.assign({\r\n                            id : doc.id,\r\n                            data : doc.data()\r\n                        }))\r\n                    })\r\n                    this.setState({regenerated_jobs : jobs})\r\n                })\r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n        }\r\n    } else {\r\n        jobs = this.state.regenerated_jobs\r\n        if(event.target.value == \"old_to_new\"){\r\n            jobs.sort(function(a, b) {\r\n                return a.data.posted_date - b.data.posted_date;\r\n            })\r\n            this.setState({regenerated_jobs : jobs})\r\n        }else if(event.target.value == \"new_to_old\"){\r\n            jobs.sort(function(a, b) {\r\n                return b.data.posted_date - a.data.posted_date;\r\n            })\r\n            this.setState({regenerated_jobs : jobs})\r\n        }else {\r\n            jobs = this.state.regenerated_jobs\r\n            this.setState({regenerated_jobs : jobs})\r\n        }\r\n       \r\n    }\r\n    \r\n}\r\n\r\ngetCities = (id) => {\r\n    let cities = []\r\n    try{\r\n        db.collection('city').where('area_id',\"==\",id).get().\r\n        then((snapshot)=>{\r\n            snapshot.forEach(doc => {\r\n                cities.push(Object.assign(\r\n                    {id : doc.id,\r\n                  data : doc.data()}\r\n                ))\r\n            })\r\n            this.setState({cities})\r\n        })\r\n        \r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\ngetCompanyName = (id) => {\r\n    const companies = this.props.companies\r\n    let name = ''\r\n    companies.map(company=>{\r\n        if(company.id == id){\r\n            name = company.data.name\r\n        }\r\n    })\r\n    return name\r\n }\r\n\r\n getLocation = (city_id,area_id) => {\r\n     const cities = this.props.cities\r\n     const areas = this.props.areas\r\n     let city_name = ''\r\n     let area_name = ''\r\n\r\n     cities.map(city=>{\r\n         if(city.id == city_id){\r\n             city_name = city.data.name\r\n         }\r\n     })\r\n     areas.map(area=>{\r\n         if(area.id == area_id){\r\n             area_name = area.data.name\r\n         }\r\n     })\r\n    return city_name + \",\" + area_name\r\n  }\r\n\r\ngetAreaName = (id) => {\r\n    let area = {}\r\n    try{\r\n      db.collection('area').doc(id).get()\r\n      .then((snapshot)=>{\r\n          area = snapshot.data();\r\n          this.setState({areaName : area.name})\r\n      })\r\n  }catch(error){\r\n      console.log(error)\r\n  }\r\n  }\r\n\r\ngetDateString = (obj) => {\r\n    var t = new Date(1970, 0, 1);\r\n    t.setSeconds(obj.seconds);\r\n    // console.log(t)\r\n    // console.log(t.getDate()+1+'/'+(t.getMonth()+1)+'/'+t.getFullYear()+' '+ t.getHours()+':'+ t.getMinutes()+':'+ t.getSeconds()+'-'+t.getTimezoneOffset())\r\n    return t.getDate()+'/'+(t.getMonth()+1)+'/'+t.getFullYear()\r\n}\r\n\r\nfilterShow = () => {\r\n    $(\"#filterModal\").modal('show')\r\n}\r\n\r\nquickView = (id) => {\r\n    let job = {}\r\n    try{\r\n        db.collection('job').doc(id).get()\r\n        .then(snapshot => {\r\n            job = snapshot.data()\r\n            this.setState({\r\n                view_title : job.title,\r\n                view_min_salary : job.min_salary,\r\n                view_max_salary : job.max_salary,\r\n                view_employment_type : job.employment_type,\r\n                view_vacancy : job.vacancy,\r\n                view_min_age : job.min_age,\r\n                view_work_day : job.work_day,\r\n                view_work_hour : job.work_hour,\r\n                view_min_lang_skill : job.min_lang_skill,\r\n                view_min_exp_year : job.min_exp_year,\r\n                view_area : job.area,\r\n                view_city : job.city,\r\n                view_job_address : job.job_address,\r\n                view_company : job.company,\r\n                view_description : job.description,\r\n                view_requirement : job.requirement,\r\n                view_other_qualification : job.other_qualification,\r\n                view_other_message : job.other_message,\r\n                view_posted_date : job.posted_date\r\n            })\r\n        })\r\n        \r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n    \r\n}\r\n     render(){\r\n      const all_jobs = this.state.regenerated_jobs\r\n      const areas = this.props.areas\r\n      const cities = this.state.cities\r\n      const viewCities = this.props.cities\r\n      const stateObj = this.state\r\n        return(\r\n            <html>\r\n            <body id=\"top\">\r\n            <nav className=\"navbar nav-color sticky-top\">\r\n            <div className=\"site-logo col-6\"><a href=\"index\" style={{fontSize:30, color: \"white\"}}>Nursing Job <b style={{color : \"rgb(187, 7, 106)\"}}>Agency</b></a></div>\r\n            <a href=\"index\">Home</a>\r\n            <a href=\"#\">About</a>\r\n            <a href=\"contact\">Contact</a>\r\n            <a href=\"filter\">Filter</a>\r\n            <a class=\"btn btn-float signin\" href=\"login\" role=\"button\" style={{background: \"rgb(187, 7, 106)\", color: \"white\"}}>Sign In</a>\r\n            </nav>\r\n         \r\n              <div className=\"site-wrap\">\r\n            \r\n              <section className=\"section-hero overlay inner-page bg-image\" style={{backgroundImage: \"url('/images/1.png')\"}}id=\"home-section\">\r\n                <br/>\r\n              <h1 className=\"font-weight-bold text-center\" style={{color:\"rgba(187, 7, 106)\", width:600, margin:\"auto\"}}>A Powerful Job Agency</h1>\r\n             \r\n              </section>\r\n              <section className=\"site-section\">\r\n                <div className=\"container\">\r\n                <div className=\"row mb-5 justify-content-center\" >\r\n                    <div className=\"col-md-7 text-center\">\r\n                      <h2 className=\"section-title mb-2\" style={{color:\"rgba(187, 7, 106)\",marginLeft:\"center\"}}>{`${all_jobs.length} - Jobs Found`}</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                  <div className=\"select-job-items\">\r\n                      <span>Sort by</span>\r\n                      <select name=\"sortby\" style={{marginRight : 1+\"em\"}} onChange={this.reGenerateJobs}>\r\n                          <option value=\"new_to_old\">Newest to Oldest</option>\r\n                          <option value=\"old_to_new\">Oldest to Newest</option>\r\n                      </select>\r\n                </div>\r\n                <div className=\"col-6\">\r\n\r\n                </div>\r\n                  </div>\r\n                </div>\r\n               <br/>\r\n              <ul style={{width : 100 + \"%\"}}>\r\n            \r\n                {this.state.regenerated_jobs && this.state.regenerated_jobs.map((job) => (\r\n                    <li id={job.id} >\r\n\r\n                     <div>\r\n                     <div className=\"row align-items-start job-item  pb-2 mb pt-2\">\r\n                      <div className=\"col-md-2\">\r\n                        <Link href={`/job-single?id=${job.id}`}><img src=\"images/featured-listing-1.jpg\" alt=\"Image\" className=\"img-fluid\"/></Link>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <span className=\"badge px-2 py-1 mb-3\" style={{background: \"rgb(187, 7, 106)\", color: \"white\"}}>{`${job.data.J_Contract}`}</span>\r\n                        <h2><Link href={`/job-single?id=${job.id}`}><a style={{color:\"#3c3c3c\",fontWeight:\"bold\"}}>{`${job.data.Jname}`}</a></Link></h2>\r\n\r\n                        <p className=\"meta\">Employer: <strong>{this.getCompanyName(job.data.EMPLOYERID)}&nbsp;&nbsp;&nbsp;</strong>Posted In: <strong>{`${this.getDateString(job.data.PostedDate)}`}</strong></p>\r\n                      \r\n                      </div>\r\n                      <div className=\"col-md-3 text-left\">\r\n                        <h3 style={{color:\"#3c3c3c\",fontSize:16}}><strong>{this.getCityLocation(job.data.J_city)}</strong></h3>\r\n                        <span className=\"meta\">{this.getAreaLocation(job.data.J_area)}</span>\r\n                      </div>\r\n                      <div className=\"col-md-3 text-md-right\">\r\n                        <strong style={{color:\"#3c3c3c\"}}>¥{`${job.data.J_min_salary} ~ ¥${job.data.J_max_salary}`}</strong>\r\n                      </div>\r\n                    </div>\r\n                     </div>\r\n                     </li>\r\n                ) )\r\n                }\r\n                </ul>\r\n                      \r\n        <div className=\"pagination-area pb-115 text-center \">\r\n            <div className=\"container \">\r\n                <div className=\"row \">\r\n                    <div className=\"col-xl-12 \">\r\n                        <div className=\"single-wrap d-flex justify-content-center \">\r\n                            <nav aria-label=\"Page navigation example \">\r\n                                <ul className=\"pagination justify-content-start \">\r\n                                    <li className=\"page-item \" onClick={this.goFirst}><a className=\"page-link \" >First</a></li>\r\n                                    {this.state.current_start > 0 && (<li className=\"page-item \" onClick={this.backwardPage}><a className=\"page-link \" ><span className=\"ti-angle-left \"></span></a></li>)}\r\n                                    {all_jobs.length >= this.state.current_start && (<li className=\"page-item \" onClick={this.forwardPage}><a className=\"page-link \" ><span className=\"ti-angle-right \"></span></a></li>)}\r\n                                    <li className=\"page-item \" onClick={this.goLast}><a className=\"page-link \" >Last</a></li>\r\n                                    \r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n          \r\n          </div></section>  \r\n          \r\n              \r\n                  \r\n              <footer className=\"site-footer\">\r\n          \r\n                \r\n                <div className=\"container\">\r\n                  <div className=\"row mb-5\">\r\n                    <div className=\"col-6 col-md-3 mb-4 mb-md-0\">\r\n                      <h3>Address</h3>\r\n                      <ul className=\"list-unstyled\">\r\n                        <li><a href=\"#\">87,Ward Tyokyo,Japan </a></li>\r\n                        <li><a href=\"#\">nursejobagency@gmail.com</a></li>\r\n                        <li><a href=\"#\">864-11-222</a></li>\r\n                        \r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-6 col-md-3 mb-4 mb-md-0\">\r\n                      <h3>Company</h3>\r\n                      <ul className=\"list-unstyled\">\r\n                        <li><a href=\"#\">About Us</a></li>\r\n                        <li><a href=\"#\">Resources</a></li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-6 col-md-3 mb-4 mb-md-0\">\r\n                      <h3>Support</h3>\r\n                      <ul className=\"list-unstyled\">\r\n                        <li><a href=\"#\">Support</a></li>\r\n                        <li><a href=\"#\">Privacy</a></li>\r\n                        <li><a href=\"#\">Terms of Service</a></li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-6 col-md-3 mb-4 mb-md-0\">\r\n                      <h3>Contact Us</h3>\r\n                      <div className=\"footer-social\">\r\n                        <a href=\"#\"><span className=\"icon-facebook\"></span></a>\r\n                        <a href=\"#\"><span className=\"icon-twitter\"></span></a>\r\n                        <a href=\"#\"><span className=\"icon-instagram\"></span></a>\r\n                        <a href=\"#\"><span className=\"icon-linkedin\"></span></a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n          \r\n                 \r\n                </div>\r\n              </footer>\r\n            \r\n            </div>\r\n          \r\n         \r\n               \r\n            </body>\r\n          </html>\r\n        )\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}