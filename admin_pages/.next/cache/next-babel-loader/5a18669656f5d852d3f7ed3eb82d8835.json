{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\admin_pages\\\\pages\\\\city.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { loadFirebase } from '../lib/db';\nexport default class AreaInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      cities: [\"Tokyo\", \"Osaka\", \"Hiroshima\", \"Nagoya\", \"Nagano\", \"Kyoto\", \"Sendai\", \"Sakata\", \"Kanazawa\", \"Kobe\", \"Yokohama\", \"Akita\", \"Aomori\", \"Hirosaki\", \"Hachinohe\", \"Fukushima\", \"Morioka\", \"Niigata\", \"Kure\", \"Matsue\", \"Tottori\", \"Gifu\", \"Tsu\", \"Matsumoto\", \"Shizuoka\", \"Hamamatsu\", \"Fukui\", \"Maizuru\", \"Wakayama\", \"Mito\", \"Kofu\", \"Iwaki\", \"Nagaoka\", \"Yamagata\", \"Tsuruoka\", \"Okayama\", \"Shimonoseki\", \"Toyama\", \"Takaoka\", \"Otsu\", \"Maebashi\", \"Kawasaki\", \"Kawagoe\", \"Utsunomiya\", \"Hachioji\", \"Koriyama\"],\n      AREAID: ''\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(event.target.value);\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      console.log(this.state);\n      event.preventDefault(); // for(var i = 0;i<this.state.cities.length;i++){\n      //     try{\n      //         let firebase = loadFirebase() \n      //         firebase.firestore().collection('city').add({cityName : this.state.cities[i], AREAID : this.state.AREAID})\n      //     }catch (error){\n      //         console.log(error)\n      //     }\n      // }\n    });\n  }\n\n  static async getInitialProps() {\n    let firebase = await loadFirebase();\n    let result2 = await new Promise((resolve, reject) => {\n      firebase.firestore().collection('area').limit(10).get().then(snapshot => {\n        console.log(snapshot);\n        let data2 = [];\n        snapshot.forEach(doc => {\n          data2.push(Object.assign({\n            id: doc.id,\n            data: doc.data()\n          }));\n        });\n        console.log(\"data2\");\n        resolve(data2);\n      }).catch(error => {\n        reject([]);\n      });\n    });\n    return {\n      area: result2\n    };\n  }\n\n  render() {\n    const area = this.props.area;\n    console.log(area);\n    return __jsx(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, __jsx(\"select\", {\n      name: \"AREAID\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, area && area.map(Area => __jsx(\"option\", {\n      value: Area.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, Area.data.areaName))), __jsx(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/admin_pages/pages/city.js"],"names":["loadFirebase","AreaInput","React","Component","cities","AREAID","event","setState","target","name","value","console","log","state","preventDefault","getInitialProps","firebase","result2","Promise","resolve","reject","firestore","collection","limit","get","then","snapshot","data2","forEach","doc","push","Object","assign","id","data","catch","error","area","render","props","handleChange","map","Area","areaName","handleSubmit"],"mappings":"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","sourcesContent":["import {loadFirebase} from '../lib/db'\r\nexport default class AreaInput extends React.Component{\r\n    static async getInitialProps() {\r\n        let firebase = await loadFirebase() \r\n        let result2 = await new Promise((resolve, reject) => {\r\n            firebase.firestore().collection('area')\r\n              .limit(10)\r\n              .get()\r\n              .then(snapshot => {\r\n                console.log(snapshot)\r\n                let data2 = []\r\n                snapshot.forEach((doc) => {\r\n                  data2.push(\r\n                    Object.assign({\r\n                      id: doc.id,\r\n                      data : doc.data()\r\n                    })\r\n                  )\r\n                })\r\n                console.log(\"data2\")\r\n                resolve(data2)\r\n              })\r\n              .catch(error => {\r\n                reject([])\r\n              })\r\n          })\r\n          return {area: result2}\r\n      }\r\n    state = {\r\n        cities : [\r\n            \"Tokyo\", \r\n            \"Osaka\", \r\n            \"Hiroshima\",\r\n            \"Nagoya\", \r\n            \"Nagano\", \r\n            \"Kyoto\", \r\n            \"Sendai\", \r\n            \"Sakata\", \r\n            \"Kanazawa\", \r\n            \"Kobe\", \r\n            \"Yokohama\", \r\n            \"Akita\", \r\n            \"Aomori\", \r\n            \"Hirosaki\", \r\n            \"Hachinohe\", \r\n            \"Fukushima\", \r\n            \"Morioka\", \r\n            \"Niigata\", \r\n            \"Kure\", \r\n            \"Matsue\", \r\n            \"Tottori\", \r\n            \"Gifu\", \r\n            \"Tsu\", \r\n            \"Matsumoto\", \r\n            \"Shizuoka\", \r\n            \"Hamamatsu\", \r\n            \"Fukui\", \r\n            \"Maizuru\", \r\n            \"Wakayama\", \r\n            \"Mito\", \r\n            \"Kofu\", \r\n            \"Iwaki\", \r\n            \"Nagaoka\", \r\n            \"Yamagata\", \r\n            \"Tsuruoka\", \r\n            \"Okayama\", \r\n            \"Shimonoseki\", \r\n            \"Toyama\", \r\n            \"Takaoka\", \r\n            \"Otsu\", \r\n            \"Maebashi\", \r\n            \"Kawasaki\", \r\n            \"Kawagoe\", \r\n            \"Utsunomiya\", \r\n            \"Hachioji\", \r\n            \"Koriyama\"\r\n        ],\r\n        AREAID : ''\r\n    }\r\n    handleChange = (event)=>{\r\n        this.setState({[event.target.name] : event.target.value})\r\n        console.log(event.target.value)\r\n    }\r\n    handleSubmit = (event) => {\r\n        console.log(this.state)\r\n        event.preventDefault()\r\n        // for(var i = 0;i<this.state.cities.length;i++){\r\n        //     try{\r\n        //         let firebase = loadFirebase() \r\n        //         firebase.firestore().collection('city').add({cityName : this.state.cities[i], AREAID : this.state.AREAID})\r\n        //     }catch (error){\r\n        //         console.log(error)\r\n        //     }\r\n        // }\r\n    } \r\n    render (){\r\n        const area = this.props.area\r\n        console.log(area)\r\n        return (\r\n            <form>\r\n                <select name=\"AREAID\" onChange={this.handleChange}>\r\n                    {area && area.map(Area => (\r\n                        <option value={Area.id}>{Area.data.areaName}</option>\r\n                    ))}\r\n                </select>\r\n                <button onClick={this.handleSubmit}>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}