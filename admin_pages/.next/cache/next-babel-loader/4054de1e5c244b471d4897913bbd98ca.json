{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\admin_pages\\\\pages\\\\city.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { loadFirebase } from '../lib/db';\nexport default class AreaInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      cities: [\"fukuoku\", \"Kittakyushu\", \"Kurume\", \"Lizuka\", \"Omuta\", \"Kasuga\", \"Chikushino\", \"Onojo\", \"Munakata\", \"Itoshima\", \"Dazaifu\", \"Yukuhashi\", \"yanagawa\", \"Yame\", \"Fukutsu\", \"Ogori\", \"Koga\", \"Nogata\", \"Asakura\", \"Nakagawa\", \"Tagawa\", \"Chikugo\", \"Kasuya\", \"Shime\", \"Nakama\", \"kama\", \"Miyama\", \"Umi\", \"kanda\", \"okawa\", \"okagaki\", \"sasaguri\", \"shingu\", \"Ukiha\", \"Chikuzen\", \"Mizumaki\", \"Miyawaka\", \"Sue\", \"Buzen\", \"Fukuchi\", \"Miyako\", \"Hirokawa\", \"Onga\", \"Chikujo\", \"kawasaki\", \"kurate\", \"tachiarai\", \"ashiya\", \"Oki\", \"Keisen\", \"Kawara\"]\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      console.log('calling handlechange');\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(event.target.value);\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      console.log(this.state);\n      event.preventDefault();\n\n      for (var i = 0; i < this.state.cities.length; i++) {\n        try {\n          let firebase = loadFirebase();\n          firebase.firestore().collection('city').add({\n            cityName: this.state.cities[i],\n            AREAID: this.state.area\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  }\n\n  static async getInitialProps() {\n    let firebase = await loadFirebase();\n    let result2 = await new Promise((resolve, reject) => {\n      firebase.firestore().collection('area').limit(10).get().then(snapshot => {\n        console.log(snapshot);\n        let data2 = [];\n        snapshot.forEach(doc => {\n          data2.push(Object.assign({\n            id: doc.id,\n            data: doc.data()\n          }));\n        });\n        console.log(\"data2\");\n        resolve(data2);\n      }).catch(error => {\n        reject([]);\n      });\n    });\n    return {\n      area: result2\n    };\n  }\n\n  render() {\n    const area = this.props.area;\n    console.log(area);\n    return __jsx(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, __jsx(\"select\", {\n      name: \"area\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, area && area.map(Area => __jsx(\"option\", {\n      value: Area.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, Area.data.areaName))), __jsx(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/admin_pages/pages/city.js"],"names":["loadFirebase","AreaInput","React","Component","cities","event","console","log","setState","target","name","value","state","preventDefault","i","length","firebase","firestore","collection","add","cityName","AREAID","area","error","getInitialProps","result2","Promise","resolve","reject","limit","get","then","snapshot","data2","forEach","doc","push","Object","assign","id","data","catch","render","props","handleChange","map","Area","areaName","handleSubmit"],"mappings":"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","sourcesContent":["import {loadFirebase} from '../lib/db'\r\nexport default class AreaInput extends React.Component{\r\n    static async getInitialProps() {\r\n        let firebase = await loadFirebase() \r\n        let result2 = await new Promise((resolve, reject) => {\r\n            firebase.firestore().collection('area')\r\n              .limit(10)\r\n              .get()\r\n              .then(snapshot => {\r\n                console.log(snapshot)\r\n                let data2 = []\r\n                snapshot.forEach((doc) => {\r\n                  data2.push(\r\n                    Object.assign({\r\n                      id: doc.id,\r\n                      data : doc.data()\r\n                    })\r\n                  )\r\n                })\r\n                console.log(\"data2\")\r\n                resolve(data2)\r\n              })\r\n              .catch(error => {\r\n                reject([])\r\n              })\r\n          })\r\n          return {area: result2}\r\n      }\r\n    state = {\r\n        cities : [\r\n            \"fukuoku\",\r\n            \"Kittakyushu\",\r\n            \"Kurume\",\r\n            \"Lizuka\",\r\n            \"Omuta\",\r\n            \"Kasuga\",\r\n            \"Chikushino\",\r\n            \"Onojo\",\r\n            \"Munakata\",\r\n            \"Itoshima\",\r\n            \"Dazaifu\",\r\n            \"Yukuhashi\",\r\n            \"yanagawa\",\r\n            \"Yame\",\r\n            \"Fukutsu\",\r\n            \"Ogori\",\r\n            \"Koga\",\r\n            \"Nogata\",\r\n            \"Asakura\",\r\n            \"Nakagawa\",\r\n            \"Tagawa\",\r\n            \"Chikugo\",\r\n            \"Kasuya\",\r\n            \"Shime\",\r\n            \"Nakama\",\r\n            \"kama\",\r\n            \"Miyama\",\r\n            \"Umi\",\r\n            \"kanda\",\r\n            \"okawa\",\r\n            \"okagaki\",\r\n            \"sasaguri\",\r\n            \"shingu\",\r\n            \"Ukiha\",\r\n            \"Chikuzen\",\r\n            \"Mizumaki\",\r\n            \"Miyawaka\",\r\n            \"Sue\",\r\n            \"Buzen\",\r\n            \"Fukuchi\",\r\n            \"Miyako\",\r\n            \"Hirokawa\",\r\n            \"Onga\",\r\n            \"Chikujo\",\r\n            \"kawasaki\",\r\n            \"kurate\",\r\n            \"tachiarai\",\r\n            \"ashiya\",\r\n            \"Oki\",\r\n            \"Keisen\",\r\n            \"Kawara\"\r\n        ],\r\n    }\r\n    handleChange = (event)=>{\r\n        console.log('calling handlechange')\r\n        this.setState({[event.target.name] : event.target.value})\r\n        console.log(event.target.value)\r\n    }\r\n    handleSubmit = (event) => {\r\n        console.log(this.state)\r\n        event.preventDefault()\r\n        for(var i = 0;i<this.state.cities.length;i++){\r\n            try{\r\n                let firebase = loadFirebase() \r\n                firebase.firestore().collection('city').add({cityName : this.state.cities[i], AREAID : this.state.area})\r\n            }catch (error){\r\n                console.log(error)\r\n            }\r\n        }\r\n    } \r\n    render (){\r\n        const area = this.props.area\r\n        console.log(area)\r\n        return (\r\n            <form>\r\n                <select name=\"area\" onChange={this.handleChange}>\r\n                    {area && area.map(Area => (\r\n                        <option value={Area.id}>{Area.data.areaName}</option>\r\n                    ))}\r\n                </select>\r\n                <button onClick={this.handleSubmit}>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}